# GitLab uses docker in the background, so we need to specify the 
# image versions. This is useful because we're freely to use
# multiple node versions to work with it. They come from the docker
# repo.
image: node:12.20.1
variables:
    WEBAPP_PACKAGE: https://gitlab.com/assembl/light-bright-mirror/-/package_files/6322761/download
    WEBAPP_PACKAGE_TAG: ${CI_API_V4_URL}/projects/assembl/light-bright-mirror/packages/generic/bright-mirror/$CI_COMMIT_TAG/webapp.zip
    PLUGIN_PACKAGE_TAG: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/bright-mirror/$CI_COMMIT_TAG/wp-bright-mirror.zip

# And to cache them as well.
cache:
  paths:
    - node_modules/
    - .yarn

# You specify the stages. Those are the steps that GitLab will go through
# Order matters.
stages:
  - build
  - dist

Build:
  stage: build
  before_script: 
    - yarn config set cache-folder .yarn
    - yarn install 
    - yarn --dev
    - apt update; apt -yqq install php-cli
  script:
    - yarn grunt build

Generate Artifact:
    stage: dist
    before_script:
      - apt update; apt -y -qq install zip
    script: |
      set -x
      yarn grunt build;
      mv dist bright-mirror;
      if [ ! -z "$CI_COMMIT_TAG" ]; then
      cd bright-mirror; curl -o ../bm.zip $WEBAPP_PACKAGE_TAG; unzip ../bm.zip; cd ..;
      else
      cd bright-mirror; curl -o ../bm.zip $WEBAPP_PACKAGE; unzip ../bm.zip; cd ..
      fi
      zip -r bright-mirror bright-mirror
      if [ ! -z "$CI_COMMIT_TAG" ]; then curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file ./bright-mirror.zip $PLUGIN_PACKAGE_TAG; fi
    artifacts:
      paths:
        - bright-mirror
